name: Build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache build
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Lint
        run: cargo clippy --all-targets --all-features -- -D warnings

  nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: "nixpkgs=channel:release-23.11"
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - run: nix build
      - run: nix flake check

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Build docker image
        run: |
          docker build -t bot-cnvtr \
            --cache-to type=gha \
            --cache-from type=gha .

  ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs:
      - rust
      - docker
    if: ${{ github.ref_name == 'main' && success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Collect metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/h1rono/bot-cnvtr
          tags: |
            type=ref,event=branch
            type=ref,event=pr
      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: h1rono
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha
